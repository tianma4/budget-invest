# Development Dockerfile - optimized for faster builds and development workflow
# Build backend binary file
FROM golang:1.24.5-alpine3.22 AS be-builder
ARG RELEASE_BUILD=false
ARG BUILD_PIPELINE=false
ARG CHECK_3RD_API=false
ARG SKIP_TESTS=true
ENV RELEASE_BUILD=$RELEASE_BUILD
ENV BUILD_PIPELINE=$BUILD_PIPELINE
ENV CHECK_3RD_API=$CHECK_3RD_API
ENV SKIP_TESTS=$SKIP_TESTS
ENV CGO_ENABLED=1
ENV GOOS=linux

WORKDIR /go/src/github.com/mayswind/ezbookkeeping

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build pre-setup
RUN docker/backend-build-pre-setup.sh

# Install build dependencies
RUN apk add --no-cache git gcc g++ libc-dev

# Build backend with development settings
RUN ./build.sh backend

# Build frontend files
FROM --platform=$BUILDPLATFORM node:22.18.0-alpine3.22 AS fe-builder
ARG RELEASE_BUILD=false
ARG BUILD_PIPELINE=false
ENV RELEASE_BUILD=$RELEASE_BUILD
ENV BUILD_PIPELINE=$BUILD_PIPELINE

WORKDIR /go/src/github.com/mayswind/ezbookkeeping

# Copy package files first for better caching
COPY package*.json ./

# Copy source code
COPY . .

# Frontend pre-setup (removes package-lock.json)
RUN docker/frontend-build-pre-setup.sh

# Install dependencies with fresh lockfile
RUN npm install --only=production

# Install git for build process
RUN apk add --no-cache git

# Build frontend
RUN ./build.sh frontend

# Development runtime image
FROM alpine:3.22.1

# Install runtime dependencies
RUN addgroup -S -g 1000 ezbookkeeping && \
    adduser -S -G ezbookkeeping -u 1000 ezbookkeeping && \
    apk --no-cache add tzdata ca-certificates

# Copy entrypoint script
COPY docker/docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod +x /docker-entrypoint.sh

# Create application directories
RUN mkdir -p /ezbookkeeping && chown 1000:1000 /ezbookkeeping && \
    mkdir -p /ezbookkeeping/data && chown 1000:1000 /ezbookkeeping/data && \
    mkdir -p /ezbookkeeping/log && chown 1000:1000 /ezbookkeeping/log && \
    mkdir -p /ezbookkeeping/storage && chown 1000:1000 /ezbookkeeping/storage

WORKDIR /ezbookkeeping

# Copy built application
COPY --from=be-builder --chown=1000:1000 /go/src/github.com/mayswind/ezbookkeeping/ezbookkeeping /ezbookkeeping/ezbookkeeping
COPY --from=fe-builder --chown=1000:1000 /go/src/github.com/mayswind/ezbookkeeping/dist /ezbookkeeping/public

# Copy configuration files
COPY --chown=1000:1000 conf /ezbookkeeping/conf
COPY --chown=1000:1000 templates /ezbookkeeping/templates
COPY --chown=1000:1000 LICENSE /ezbookkeeping/LICENSE

# Switch to non-root user
USER ezbookkeeping

# Expose application port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/api/v1/ping || exit 1

# Set entrypoint
ENTRYPOINT ["/docker-entrypoint.sh"]